plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.dokka' version '1.6.10'
    id 'maven-publish'
}

def libVersionName = "0.0.1"
def libArtifactId = "payment-library"

android {
    namespace 'ru.modulkassa.payment.library'
    compileSdk versions.compileSdk

    defaultConfig {
        minSdk versions.minSdk
        targetSdk versions.targetSdk
        versionCode 1
        versionName libVersionName

        buildConfigField "String", "PAY_MODUL_URL", "\"https://pay.modulbank.ru/\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation libraries.gson
    implementation libraries.material
    implementation libraries.appcompat
    implementation libraries.constraintlayout

    implementation libraries.rxjava3
    implementation libraries.rxandroid
    implementation libraries.rxKotlin

    implementation libraries.retrofit
    implementation libraries.retrofitGson
    implementation libraries.retrofitRx

    implementation libraries.loggingInterceptor

    implementation libraries.securityCrypto

    testImplementation libraries.junit
    testImplementation libraries.mockitoKotlin
    testImplementation libraries.truth
    testImplementation libraries.kotlinJUnit
}

Properties properties = new Properties()
File propertiesFile = project.rootProject.file('local.properties')
if (propertiesFile.exists()) {
    properties.load(propertiesFile.newDataInputStream())
}

publishing {
    repositories {
        maven {
            name 'internal'
            url "https://nexus.moduldev.ru/repository/modulbank-android/"
            credentials {
                username properties.getProperty("nexus.username")
                password properties.getProperty("nexus.password")
            }
        }
    }

    publications {
        maven(MavenPublication) {
            groupId 'ru.modulkassa'
            artifactId libArtifactId
            version libVersionName
            afterEvaluate {
                artifact("$buildDir/outputs/aar/payment-library-release.aar")
                artifact packageJavadoc
                artifact sourceJar
            }

            pom {
                name = libArtifactId
                description = 'Payment Android SDK'
            }

            //The publication doesn't know about our dependencies, so we have to manually add them to the pom
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.implementation.allDependencies.each {
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

tasks.dokkaJavadoc.configure {
    suppressObviousFunctions.set(false) // Suppress obvious functions like default toString or equals
}

task packageJavadoc(type: Jar, dependsOn: 'dokkaJavadoc') {
    from dokkaJavadoc.outputDirectory
    archiveClassifier = 'javadoc'
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.kotlin.srcDirs
    classifier "sources"
}

artifacts {
    archives sourceJar, packageJavadoc
}